{"version":3,"file":"main.js","mappings":"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","sources":["webpack://projectify/./src/scripts/data.js","webpack://projectify/./src/index.js","webpack://projectify/./src/scripts/chart.js"],"sourcesContent":["function dupData(data) {\n  return JSON.parse(JSON.stringify(data));\n}\n\nexport default dupData;\n","// import \"./scripts/chartrf.js\";\n// import \"./scripts/tradeselect.js\";\nimport Data from \"./scripts/office.json\";\nimport Data2 from \"./scripts/office.json\";\nimport Chart from \"./scripts/chart.js\";\nimport dupData from \"./scripts/data.js\";\n// import { excludeTrade, includeTrade } from \"./scripts/tradeselect.js\";\n\nconst modal = document.getElementById(\"user-instructions\");\nconst button = document.getElementById(\"modal-button\");\nconst closeButton = document.getElementById(\"close-button\");\nconsole.log(modal);\nconsole.log(button);\nconsole.log(closeButton);\n\nbutton.onclick = function () {\n  modal.style.display = \"block\";\n};\n\ncloseButton.onclick = function () {\n  modal.style.display = \"none\";\n};\n\nwindow.onclick = function (event) {\n  if (event.target === modal) {\n    modal.style.display = \"none\";\n  }\n};\n\n//creating an empty chart\nlet dup = dupData(Data);\n\nconst width = 1500;\nconst height = 850;\nconst margin = { top: 50, bottom: 50, left: 50, right: 50 };\n\nlet chart = new Chart(width, height, margin);\nchart.createChart(dup);\ndup = dupData(Data);\n\n// user input event listener / set input variables\nlet form = document.getElementById(\"user-input\");\nif (form) form.addEventListener(\"submit\", createBudget);\nlet squareFootage;\nlet budget;\n\n// user input event handler\nfunction createBudget(e) {\n  e.preventDefault();\n  squareFootage = document.getElementById(\"sf\").value;\n  budget = document.getElementById(\"budget\").value;\n  resetTrades();\n  chart.deleteChart();\n  dup = dupData(Data);\n  chart.createChart(dup, squareFootage);\n  chart.getTotal(dup, budget);\n}\n\n//user selection event listener - exclude x-Axis category\nconst tradesExcludedDiv = document.getElementById(\"trades-excluded\");\nconst tradesSelectedDiv = document.getElementById(\"trade-selector\");\nlet excluded = [];\nif (tradesSelectedDiv) {\n  tradesSelectedDiv.addEventListener(\"click\", excludeTrade);\n}\nfunction excludeTrade(e) {\n  let clicked = e.target;\n  if (clicked.className === \"trade\") {\n    tradesExcludedDiv.appendChild(e.target);\n    for (let i = 0; i < dup.length; i++) {\n      if (dup[i].trade === clicked.id) {\n        excluded.push(dup[i]);\n        dup = dup.slice(0, i).concat(dup.slice(i + 1));\n      }\n    }\n    chart.deleteChart();\n    chart.updateChart(dup);\n    chart.getTotal(dup, budget);\n  }\n}\n\n//user selection event listener - include x-Axis category\nlet tradesExcluded = document.getElementById(\"trades-excluded\");\nif (tradesExcluded) {\n  tradesExcluded.addEventListener(\"click\", includeTrade);\n}\nfunction includeTrade(e) {\n  let clicked = e.target;\n  if (clicked.className === \"trade\") {\n    tradesSelectedDiv.appendChild(e.target);\n    for (let i = 0; i < excluded.length; i++) {\n      if (excluded[i].trade === clicked.id) {\n        dup.push(excluded[i]);\n        excluded = excluded.slice(0, i).concat(excluded.slice(i + 1));\n        console.log(excluded);\n        console.log(dup);\n      }\n    }\n    chart.deleteChart();\n    chart.updateChart(dup);\n    chart.getTotal(dup, budget);\n  }\n}\n\nfunction resetTrades() {\n  for (let i = 0; i < excluded.length; i++) {\n    let move = document.getElementById(excluded[i].trade);\n    tradesSelectedDiv.appendChild(move);\n  }\n  excluded = [];\n}\n\nlet reset = document.getElementById(\"reset-button\");\nif (reset) {\n  reset.addEventListener(\"click\", resetChart);\n}\n\nfunction resetChart(e) {\n  chart.deleteChart();\n  dup = dupData(Data);\n  chart.createChart(dup);\n  resetTrades();\n}\n","import Data from \"./office.json\";\nimport Data2 from \"./office.json\";\nimport dupData from \"./data.js\";\n// const width = 800;\n// const height = 750;\n// const margin = { top: 50, bottom: 50, left: 50, right: 50 };\n\nclass Chart {\n  constructor(width, height, margin) {\n    this.width = width;\n    this.height = height;\n    this.margin = margin;\n  }\n\n  createChart(data, sf = 0) {\n    for (let i = 0; i < data.length; i++) {\n      data[i].rate *= sf;\n    }\n\n    this.updateChart(data);\n  }\n\n  updateChart(data) {\n    this.svg = d3\n      .select(\"#main-chart\")\n      .append(\"svg\")\n      .attr(\"height\", this.height - this.margin.top - this.margin.bottom)\n      .attr(\"width\", this.width)\n      .attr(\"viewBox\", [0, 0, this.width, this.height]);\n\n    this.x = d3\n      .scaleBand()\n      .domain(d3.range(data.length))\n      .range([this.margin.left, this.width - this.margin.right])\n      .padding(0.1);\n\n    this.y = d3\n      .scaleLinear()\n      .domain([0, d3.max(data.map((e) => e.rate))])\n      .range([this.height - this.margin.bottom, this.margin.top]);\n\n    this.svg\n      .append(\"g\")\n      .attr(\"fill\", \"royalblue\")\n      .selectAll(\"rect\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"x\", (d, i) => this.x(i))\n      .attr(\"y\", (d) => this.y(d.rate))\n      .attr(\"height\", (d) => this.y(0) - this.y(d.rate))\n      .attr(\"width\", this.x.bandwidth());\n\n    function xAxis(g) {\n      g.attr(\"transform\", `translate(0, ${this.height - this.margin.bottom})`)\n        .call(d3.axisBottom(this.x).tickFormat((i) => data[i].trade))\n        .attr(\"font-size\", \"16px\");\n    }\n\n    function yAxis(g) {\n      g.attr(\"transform\", `translate(${this.margin.left}, 0)`)\n        .call(d3.axisLeft(this.y).ticks(null, data.format))\n        .attr(\"font-size\", \"18px\");\n    }\n\n    this.svg.append(\"g\").call(xAxis.bind(this));\n    this.svg.append(\"g\").call(yAxis.bind(this));\n    this.svg.node();\n  }\n\n  deleteChart() {\n    let mainChartDiv = document.getElementById(\"main-chart\");\n    mainChartDiv.innerHTML = \"\";\n  }\n\n  getTotal(data, budget) {\n    const totaldiv = document.getElementById(\"total-disp\");\n    const budgetdiv = document.getElementById(\"budget-disp\");\n    const deltadiv = document.getElementById(\"delta-disp\");\n    let total = 0;\n    for (let i = 0; i < data.length; i++) {\n      total += data[i].rate;\n    }\n\n    console.log(total);\n    console.log(budget);\n    const numFor = Intl.NumberFormat(\"en-US\");\n    const newTotal = numFor.format(total);\n    const newBudget = numFor.format(budget);\n    const newDelta = numFor.format(total - budget);\n    totaldiv.innerHTML = `TOTAL:$${newTotal}`;\n    budgetdiv.innerHTML = `BUDGET: $${newBudget}`;\n    deltadiv.innerHTML = `DELTA: $${newDelta}`;\n  }\n}\n\nexport default Chart;\n"],"names":["data","JSON","parse","stringify","modal","document","getElementById","button","closeButton","console","log","onclick","style","display","window","event","target","dup","dupData","Data","chart","constructor","width","height","margin","this","createChart","sf","i","length","rate","updateChart","svg","d3","select","append","attr","top","bottom","x","scaleBand","domain","range","left","right","padding","y","scaleLinear","max","map","e","selectAll","join","d","bandwidth","call","g","axisBottom","tickFormat","trade","bind","axisLeft","ticks","format","node","deleteChart","innerHTML","getTotal","budget","totaldiv","budgetdiv","deltadiv","total","numFor","Intl","NumberFormat","newTotal","newBudget","newDelta","squareFootage","form","addEventListener","preventDefault","value","resetTrades","tradesExcludedDiv","tradesSelectedDiv","excluded","clicked","className","appendChild","id","push","slice","concat","tradesExcluded","move","reset"],"sourceRoot":""}